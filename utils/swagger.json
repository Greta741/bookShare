{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger BookShare"
  },
  "tags": [
    {
      "name": "Books"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/books": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get all books",
        "description": "",
        "operationId": "getBooks",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Book"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Add a new book",
        "description": "",
        "operationId": "addBook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookEdit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Book created"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/books/{bookId}": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Find book by id",
        "description": "",
        "operationId": "getBookById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "ID of book",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Book not found"
          }
        }
      },
      "put": {
        "tags": [
          "Books"
        ],
        "summary": "Update book",
        "description": "",
        "operationId": "updateBook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "ID of book",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookEdit"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Book updated"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Book not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Books"
        ],
        "summary": "Delete book",
        "description": "",
        "operationId": "deleteBook",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "description": "Book id to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Book deleted"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Book not found"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add a new user",
        "description": "",
        "operationId": "addUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/oauth2/authorize": {
      "post": {
        "tags": [
          "oauth2"
        ],
        "summary": "Get code",
        "description": "",
        "operationId": "getCode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters":[
          {
            "name":"client_id",
            "in":"query",
            "description":"Client id",
            "required":true,
            "type":"string"
          },
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Code"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/oauth2/token": {
      "post": {
        "tags": [
          "oauth2"
        ],
        "summary": "Get token",
        "description": "",
        "operationId": "Get token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters":[
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccessToken"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
  },
  "definitions": {
    "BookEdit": {
      "type": "object",
      "required": [
        "name",
        "author",
        "year",
        "type",
        "city",
        "pages",
        "tradable",
        "forSell",
        "price"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "year": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "pages": {
          "type": "integer"
        },
        "tradable": {
          "type": "boolean"
        },
        "forSell": {
          "type": "boolean"
        },
        "price": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "BookEdit"
      }
    },
    "Book": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "year": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "pages": {
          "type": "integer"
        },
        "tradable": {
          "type": "boolean"
        },
        "forSell": {
          "type": "boolean"
        },
        "price": {
          "type": "integer"
        }
      },
      "xml": {
        "name": "Book"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Book"
      }
    },
    "Code": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Book"
      }
    },
    "AccessToken": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Book"
      }
    }
  }
}